(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{404:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一-、反射的概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-、反射的概述"}},[t._v("#")]),t._v(" 一 、反射的概述")]),t._v(" "),s("h3",{attrs:{id:"_1-什么是反射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是反射"}},[t._v("#")]),t._v(" 1. 什么是反射")]),t._v(" "),s("p",[t._v("Java的反射机制是指在运行状态中，对于任意一个类，都能知道这个类的所有属性和方法；对于任意一个对象，都能调用它的任意一个方法和属性；这种动态获取的信息已经动态调用对象的方法的功能称为Java语言的反射机制")]),t._v(" "),s("blockquote",[s("p",[t._v("（1）Java反射机制的核心是在程序运行时动态加载类并获取类的详细信息，从而操作类或对象的属性和方法。本质是JVM得到class对象之后，再通过class对象进行反编译，从而获取对象的各种信息。")]),t._v(" "),s("p",[t._v("（2）Java属于先编译再运行的语言，程序中对象的类型在编译期就确定下来了，而当程序在运行时可能需要动态加载某些类，这些类因为之前用不到，所以没有被加载到JVM。通过反射，可以在运行时动态地创建对象并调用其属性，不需要提前在编译期知道运行的对象是谁。")])]),t._v(" "),s("p",[t._v("要想解剖一个类，必须先要获取到该类的字节码文件对象。而解剖使用的就是Class类中的方法，所以先要获取到每一个字节码文件对应的Class类型的对象。")]),t._v(" "),s("h3",{attrs:{id:"_2-反射的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-反射的原理"}},[t._v("#")]),t._v(" 2. 反射的原理")]),t._v(" "),s("p",[t._v("==反射就是把Java类中的各种成分映射成一个个的Java对象==，例如：一个类中有：成员变量、方法、构造方法、包等等信息，利用反射计算可以对一个类进行解剖，把各个组成部分映射成一个个对象（实际上：这些成员方法、构造方法、在加入类中都有一个类来描述）。加载的时候："),s("strong",[t._v("将class文件读入内存，并为之创建一个Class对象")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://lunatics.oss-cn-hangzhou.aliyuncs.com/blog/%E5%8F%8D%E5%B0%841.jpg",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"_3-反射的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-反射的优缺点"}},[t._v("#")]),t._v(" 3.反射的优缺点")]),t._v(" "),s("ul",[s("li",[t._v("优点：反射可以在运行时获得类的各种内容，进行反编译，对于Java这种先编译再运行的语言，能够让我们很方便地创建灵活的代码，这些代码可以在运行时装配，无需再组件之间进行源代码的链接，更加容易实现面向对象")]),t._v(" "),s("li",[t._v("缺点：a. 反射会消耗一定的系统资源，因此，如果不需要动态地创建一个对象，那么就不需要用反射 b. 反射调用方法时可以忽略权限检查，因此可能会破坏封装性而导致安全问题")])]),t._v(" "),s("h2",{attrs:{id:"反射的基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射的基本使用"}},[t._v("#")]),t._v(" 反射的基本使用")]),t._v(" "),s("h3",{attrs:{id:"_1-获得class对象的三种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-获得class对象的三种方式"}},[t._v("#")]),t._v(" 1. 获得Class对象的三种方式")]),t._v(" "),s("ul",[s("li",[t._v("通过对象实例的getClass方法")]),t._v(" "),s("li",[t._v("类.class获得（任何数据类型，包括基本的数据类型，都有一个静态的class属性）")]),t._v(" "),s("li",[t._v("通过Class类的静态方法：forName(String className)获得        （最常用）")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方式一：通过实例对象的getClass方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Student类及其子类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" studentClass1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方式二：直接通过Student的.class获得")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" studentClass2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方式三：通过Class类的forName(类名)方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" studentClass3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cn.cehire.bean.Student"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注意：在运行期间，一个类只有一个Class对象产生，所以上例中"),s("code",[t._v("studentClass1==studentClass2")]),t._v("，"),s("code",[t._v("studentClass2==studentClass3")]),t._v("都为true")]),t._v(" "),s("p",[t._v("三种方式中最常用第三种，第一种有对象的情况下不太需要反射；第二种需要导入类包，耦合度较高；第三种可以用一个字符串传入，也可以写在配置文件中")]),t._v(" "),s("h3",{attrs:{id:"_2-判断是否为某个类的实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-判断是否为某个类的实例"}},[t._v("#")]),t._v(" 2. 判断是否为某个类的实例")]),t._v(" "),s("p",[t._v("一般来说，我们使用instanceof来判断是否为某个类的实例。同时我们也可以借助反射中Class对象的isInstance方法来判断是否为某个类的实例，这是一个native方法")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" studentClass1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-创建实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建实例"}},[t._v("#")]),t._v(" 3.创建实例")]),t._v(" "),s("p",[t._v("我们可以通过反射来生成对象，主要有两种方法")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("使用Class对象的newInstance方法来创建Class对象对应类的实例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" studentClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cn.cehire.bean.Student"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" student1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" studentClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("先通过Class对象获取指定的Constructor对象，再调用Constructor对象的newInstance方法来创建对象，这种方法可以用指定的构造器构造类的实例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" studentClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cn.cehire.bean.Student"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Constructor")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" studentClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConstructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" student2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" constructor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"_4-通过反射获取构造方法并使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-通过反射获取构造方法并使用"}},[t._v("#")]),t._v(" 4.通过反射获取构造方法并使用")]),t._v(" "),s("ol",[s("li",[t._v("批量获取的方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("public Constructor[] getConstructors()：获取所有“公有的（public）”构造方法")]),t._v(" "),s("p",[t._v("public Constructor[] getDeclaredConstructors()：获取所有的构造方法（包括私有、受保护、缺省、公有）")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("单个获取的方法，并调用")])]),t._v(" "),s("blockquote",[s("p",[t._v("public Constructor getConstructor(Class... parameterTypes)：获取单个“公有的”构造方法")]),t._v(" "),s("p",[t._v("public Constructor getDeclaredConstructor(Class... parameterTypes)：获取某个构造方法")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("调用构造方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("Constructor对象直接newInstance(Object... initargs)")]),t._v(" "),s("p",[t._v("newInstance是Constructor类的方法（管理构造函数的类）")]),t._v(" "),s("p",[t._v("api的解释为：newInstance(Object... initargs)，使用此Constructor对象表示的构造方法来创建该构造方法的声明类的新实例，并用指定的初始化参数初始化该实例")]),t._v(" "),s("p",[t._v("它的返回值是T类型，所以newInstance是创建了一个构造方法的声明类的新实例对象，并通过这个实例调用")])]),t._v(" "),s("h3",{attrs:{id:"_5-获取成员变量并调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-获取成员变量并调用"}},[t._v("#")]),t._v(" 5.获取成员变量并调用")]),t._v(" "),s("ol",[s("li",[t._v("批量获取字段")])]),t._v(" "),s("blockquote",[s("p",[t._v("Field[] getFields()：获取所有的公共字段")]),t._v(" "),s("p",[t._v("Field[] getDeclaredFields()：获取所有字段")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("获取单个字段")])]),t._v(" "),s("blockquote",[s("p",[t._v("Field getField(String fieldName)：获取某个公有的字段")]),t._v(" "),s("p",[t._v("Field getDeclaredField(String fieldName)：获取某个字段")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("设置字段的值")])]),t._v(" "),s("blockquote",[s("p",[t._v("调用得到的Field对象中的set(Object obj,Object value)方法")]),t._v(" "),s("ol",[s("li",[t._v("obj：要设置的字段所在的对象")]),t._v(" "),s("li",[t._v("value：要为字段设置的值")])])]),t._v(" "),s("h3",{attrs:{id:"获取成员方法并调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取成员方法并调用"}},[t._v("#")]),t._v(" 获取成员方法并调用")]),t._v(" "),s("ol",[s("li",[t._v("批量获取成员方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("Method[] getMethods()：获取所有公共方法，包含父类中的方法")]),t._v(" "),s("p",[t._v("Method[] getDeclaredMethods()：获取所有的方法")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("获取单个成员方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("Method getMethod(Stirng name,Class<?>... parameterTypes)")]),t._v(" "),s("p",[t._v("Method getDeclaredMethod(Stirng name,Class<?>... parameterTypes)")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("调用成员方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("调用得到的Method对象中的invoke(Object obj,Object... args)方法")]),t._v(" "),s("ol",[s("li",[t._v("obj：要调用方法的对象")]),t._v(" "),s("li",[t._v("args：调用方法时所传递的实参")])])]),t._v(" "),s("h2",{attrs:{id:"反射实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反射实战"}},[t._v("#")]),t._v(" 反射实战")]),t._v(" "),s("h3",{attrs:{id:"通过反射运行配置文件内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过反射运行配置文件内容"}},[t._v("#")]),t._v(" 通过反射运行配置文件内容")]),t._v(" "),s("h3",{attrs:{id:"通过反射越过泛型检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过反射越过泛型检查"}},[t._v("#")]),t._v(" 通过反射越过泛型检查")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cehire")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reflect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Demo4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aaa"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bbb"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需求有一个String类型的ArrayList，通过反射机制向其中加入Integer类型的对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" arrayListClass "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arrayListClass"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);