(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{407:function(t,a,s){"use strict";s.r(a);var r=s(7),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"二维变换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维变换"}},[t._v("#")]),t._v(" 二维变换")]),t._v(" "),a("p",[a("strong",[t._v("注：这里的所有变换都是基于原点进行的，旋转默认逆时针方向")])]),t._v(" "),a("p",[t._v("变换时左乘变换矩阵T，即 X' = TX")]),t._v(" "),a("h3",{attrs:{id:"缩放变换-scale"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缩放变换-scale"}},[t._v("#")]),t._v(" 缩放变换（Scale）")]),t._v(" "),a("p",[a("code",[t._v("x' = sx")]),t._v("，"),a("code",[t._v("y' = sy")])]),t._v(" "),a("p",[t._v("缩放矩阵T = S\t"),a("code",[t._v("[ [sx, 0], [0, sy] ]")])]),t._v(" "),a("p",[t._v("x和y可以不均匀的缩放，只需要sx和sy不相同即可")]),t._v(" "),a("p",[t._v("对称操作"),a("code",[t._v("T = [ [-1, 0], [0, 1] ]")]),t._v("，关于y轴对称")]),t._v(" "),a("h3",{attrs:{id:"切变-shear-matrix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切变-shear-matrix"}},[t._v("#")]),t._v(" 切变（Shear Matrix）")]),t._v(" "),a("p",[t._v("垂直方向不变（y不变），水平方向移动（x移动）")]),t._v(" "),a("p",[a("code",[t._v("T = [ [1, a], [0, 1] ]")])]),t._v(" "),a("h3",{attrs:{id:"旋转-rotate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#旋转-rotate"}},[t._v("#")]),t._v(" 旋转（Rotate）")]),t._v(" "),a("p",[t._v("设旋转的角度为θ，"),a("code",[t._v("T = Rθ = [ [cosθ, -sinθ], [sinθ, cosθ] ]")])])])}),[],!1,null,null,null);a.default=e.exports}}]);